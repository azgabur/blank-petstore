openapi: 3.0.2
info:
  title: Simple Petstore API
  version: 1.0.0
  x-kuadrant:
    route:  ## HTTPRoute metadata
      name: "petstore"
      namespace: "petstore"
      labels:  ## map[string]string
        deployment: petstore
      hostnames:  ## []gateway.networking.k8s.io/v1beta1.Hostname
        - example.com
      parentRefs:  ## []gateway.networking.k8s.io/v1beta1.ParentReference
        - name: apiGateway
          namespace: gateways
servers:
  - url: http://localhost:8080/api/v3
paths:
  /pet/findByStatus:
    x-kuadrant:
      backendRefs:
      - name: petstore
        namespace: petstore
        port: 8080
    get:
      tags:
        - pet
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
      responses:
        "200":
          description: A list of pets that match the provided status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        "400":
          description: Invalid status value
  /user/login:
    x-kuadrant:
      backendRefs:
      - name: petstore
        namespace: petstore
        port: 8080
    get:
      security:
      - api_key: []
      tags:
        - user
      parameters:
        - name: username
          in: query
          schema:
            type: string
        - name: password
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
  /store/inventory:
    x-kuadrant:
      backendRefs:
      - name: petstore
        namespace: petstore
        port: 8080
        rate_limit:
          rates:
          - limit: 10
            duration: 10
            unit: second
    get:
      tags:
        - store
      responses:
        "200":
          description: A map of pet statuses to their quantities
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
          enum:
            - available
            - pending
            - sold
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
